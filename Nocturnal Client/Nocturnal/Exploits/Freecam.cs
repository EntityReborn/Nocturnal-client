using Nocturnal.Wrappers;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;

namespace Nocturnal.Exploits
{
    class freecam
    {
        private static float mousex = 20;
        private static float speed = 1;
        private static float mousey = 20;
        private static GameObject issecondcamera;
        public static bool isfreecam = false;
        //UserInterface/MenuContent/Screens/Settings/MousePanel/SensitivitySlider/
        public static void freecams()
        {
            

            if (Input.GetKey(KeyCode.LeftControl) && Input.GetKeyDown(KeyCode.G))
            {
                runcamera();
            }

            try
            {
                if (isfreecam)
                {

                    if (GameObject.Find("Freecammarcel") == null)
                    {
                        Extentions.LocalPlayer.gameObject.GetComponent<CharacterController>().enabled = true;
                        GameObject.Find("Camera (eye)").GetComponent<Camera>().enabled = true;
                        isfreecam = false;
                        return;
                    }
                    if (Input.GetKey(KeyCode.W))
                    {
                        GameObject.Find("Freecammarcel").transform.position += GameObject.Find("Freecammarcel").transform.forward * 0.07f * speed;
                    }
                    if (Input.GetKey(KeyCode.S))
                    {
                        GameObject.Find("Freecammarcel").transform.position -= GameObject.Find("Freecammarcel").transform.forward * 0.07f * speed;
                    }
                    if (Input.GetKey(KeyCode.D))
                    {
                        GameObject.Find("Freecammarcel").transform.position += GameObject.Find("Freecammarcel").transform.right * 0.05f * speed;
                    }
                    if (Input.GetKey(KeyCode.A))
                    {
                        GameObject.Find("Freecammarcel").transform.position -= GameObject.Find("Freecammarcel").transform.right * 0.05f * speed;
                    }
                    if (Input.GetKey(KeyCode.LeftShift))
                    {
                        speed = 2.5f;
                    }
                    else
                    {
                        speed = 1;
                    }
                    mousex -= 3 * Input.GetAxis("Mouse Y");
                    mousey += 3 * Input.GetAxis("Mouse X");

                    GameObject.Find("Freecammarcel").transform.eulerAngles = new Vector3(mousex, mousey, 0);
                }
            }
            catch { }
        }



        public static void runcamera()
        {
            if (Extentions.IsInWorld() && !Extentions.LocalPlayer.IsInVR())
            {
                if (issecondcamera != null)
                {
                    Extentions.LocalPlayer.gameObject.GetComponent<CharacterController>().enabled = true;
                    Extentions.LocalPlayer.gameObject.GetComponent<GamelikeInputController>().enabled = true;
                    GameObject.Find("Camera (eye)").GetComponent<Camera>().enabled = true;
                    GameObject.Destroy(issecondcamera);
                    isfreecam = false;
                    return;
                }
                Extentions.LocalPlayer.gameObject.GetComponent<CharacterController>().enabled = false;
                Extentions.LocalPlayer.gameObject.GetComponent<GamelikeInputController>().enabled = false;
                GameObject.Find("Camera (eye)").GetComponent<Camera>().enabled = false;
                GameObject marcel = new GameObject();
                marcel.AddComponent<Camera>();
                marcel.name = "Freecammarcel";
                marcel.transform.position = GameObject.Find("Camera (eye)").transform.position;
                marcel.GetComponent<Camera>().nearClipPlane = 0.04f;
                issecondcamera = marcel;
                isfreecam = true;
            }
        }


    }
}
