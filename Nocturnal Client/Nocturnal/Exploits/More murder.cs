using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using UnityEngine;
using VRC.Udon;
using Nocturnal.Wrappers;
using VRC.SDKBase;
using MelonLoader;

namespace Nocturnal.Exploits
{
     class More_murder
    {

        private static float speed = 10;
        public static IEnumerator bombexplodes()
        {
            var bombcircle = GameObject.Find("Game Logic").transform.Find("Weapons/Unlockables/Frag (0)");

            foreach (var smokebosmb in Resources.FindObjectsOfTypeAll<UdonBehaviour>())
            {

                if (smokebosmb.name == "Frag (0)")
                {
                    var smokebombs = smokebosmb.GetComponents<UdonBehaviour>();
                    foreach (var udonBehaviours in smokebombs)
                    {
                        if (udonBehaviours._eventTable.ContainsKey("Respawn") == true)
                        {
                            udonBehaviours.enabled = !bombspamc;
                        }
                    }
                }
            }

            for (; ; )
            {
                if (!bombspamc)
                    yield break;

                Networking.SetOwner(Extentions.LocalPlayer.field_Private_VRCPlayerApi_0, bombcircle.gameObject);
                speed += Time.deltaTime * 10;
                bombcircle.position = new Vector3(Target.istargetd.transform.position.x + 2.5f * (float)Math.Cos(speed), Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Hips).transform.position.y, Target.istargetd.transform.position.z + 2.5f * (float)Math.Sin(speed));
                bombcircle.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "Explode");

                yield return null;
            }


        }


        public static IEnumerator bombhead()
        {

            var bomb = GameObject.Find("Game Logic").transform.Find("Weapons/Unlockables/Frag (0)");

            foreach (var smokebosmb in Resources.FindObjectsOfTypeAll<UdonBehaviour>())
            {

                if (smokebosmb.name == "Frag (0)")
                {
                    var smokebombs = smokebosmb.GetComponents<UdonBehaviour>();
                    foreach (var udonBehaviours in smokebombs)
                    {
                        if (udonBehaviours._eventTable.ContainsKey("Respawn") == true)
                        {
                            udonBehaviours.enabled = !bombspam;
                        }
                    }
                }
            }




            Style.Consoles.consolelogger(bomb.gameObject.transform.position.x.ToString());
            for (; ; )
            {
                if (bombspam == false)
                    yield break;
                Networking.SetOwner(Extentions.LocalPlayer.field_Private_VRCPlayerApi_0, bomb.gameObject);
                bomb.gameObject.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).position;
                bomb.GetComponent<UdonBehaviour>().SendCustomNetworkEvent(0, "Explode");


                yield return null;

            }



        }
        public static bool bombspamc = false;
        public static bool bombspam = false;
    }
}

