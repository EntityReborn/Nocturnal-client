using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Nocturnal.Wrappers;
using UnityEngine;
using UnityEngine.Animations;
namespace Nocturnal.Exploits.sit
{
    class sitonparts
    {
        public static bool Isroatation;
        public static bool head = false;
        public static bool rightindex = false;
        public static bool leftindex = false;
        public static bool chest = false;
        public static bool hipss = false;
        public static float pozy = 0.1f;
        public static bool Orbiting = false;

        public static IEnumerator sitonhead()
        {

            head = !head;
            var rot = false;
            if (Target.istargetd != null && Extentions.LocalPlayer != null)
            {

                if (head == true)
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
                }
                else
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                }
                for (; ; )
                {
                    if (head == true)
                    {
                        Extentions.LocalPlayer.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).position + new Vector3(0, pozy, 0);
                        if (Isroatation)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).rotation;
                            rot = true;
                        }

                        yield return null;
                    }
                    else
                    {
                        if (rot == true)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = new Quaternion(0f, 0f, 0f, 0f);
                            rot = false;

                        }
                        VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                        yield break;
                    }

                }


            }
        }



        public static IEnumerator sitonleftarm()
        {

            leftindex = !leftindex;
            var rot = false;
            if (Target.istargetd != null && Extentions.LocalPlayer != null)
            {

                if (leftindex == true)
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
                }
                else
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                }
                for (; ; )
                {
                    if (leftindex == true)
                    {
                        Extentions.LocalPlayer.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.LeftIndexProximal).position + new Vector3(0, pozy, 0);
                        if (Isroatation)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).rotation;
                            rot = true;
                        }

                        yield return null;
                    }
                    else
                    {
                        if (rot == true)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = new Quaternion(0f, 0f, 0f, 0f);
                            rot = false;

                        }
                        VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                        yield break;
                    }

                }


            }
        }

        public static IEnumerator rightarm()
        {

            rightindex = !rightindex;
            var rot = false;
            if (Target.istargetd != null && Extentions.LocalPlayer != null)
            {

                if (rightindex == true)
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
                }
                else
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                }
                for (; ; )
                {
                    if (rightindex == true)
                    {
                        Extentions.LocalPlayer.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.RightIndexProximal).position + new Vector3(0, pozy, 0);
                        if (Isroatation)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).rotation;
                            rot = true;
                        }

                        yield return null;
                    }
                    else
                    {
                        if (rot == true)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = new Quaternion(0f, 0f, 0f, 0f);
                            rot = false;

                        }
                        VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                        yield break;
                    }

                }


            }
        }

        public static IEnumerator hips()
        {

            hipss = !hipss;
            var rot = false;
            if (Target.istargetd != null && Extentions.LocalPlayer != null)
            {

                if (hipss == true)
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
                }
                else
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                }
                for (; ; )
                {
                    if (hipss == true)
                    {
                        Extentions.LocalPlayer.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Hips).position + new Vector3(0, pozy, 0);
                        if (Isroatation)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).rotation;
                            rot = true;
                        }
                        yield return null;
                    }
                    else
                    {
                        if (rot == true)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = new Quaternion(0f, 0f, 0f, 0f);
                            rot = false;

                        }
                        VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                        yield break;
                    }

                }


            }
        }


        public static IEnumerator Chest()
        {

            chest = !chest;
            var rot = false;
            if (Target.istargetd != null && Extentions.LocalPlayer != null)
            {

                if (chest == true)
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = false;
                }
                else
                {
                    VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                }
                for (; ; )
                {
                    if (chest == true)
                    {
                        Extentions.LocalPlayer.transform.position = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Chest).position + new Vector3(0, pozy, 0);
                        if (Isroatation)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = Target.istargetd.GetVRCPlayer().GetAnimator().GetBoneTransform(HumanBodyBones.Head).rotation;
                            rot = true;
                        }
                        yield return null;
                    }
                    else
                    {

                        if (rot == true)
                        {
                            GameObject.Find("Camera (eye)").transform.rotation = new Quaternion(0f, 0f, 0f, 0f);
                            rot = false;

                        }
                        VRCPlayer.field_Internal_Static_VRCPlayer_0.gameObject.GetComponent<CharacterController>().enabled = true;
                        yield break;
                    }

                }


            }
        }
    }
}
